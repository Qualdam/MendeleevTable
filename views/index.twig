{% extends 'layout.twig' %}

{% block body %}
    <div class="container-fluid">
        <div class="row">
            <div class="col-2">
                <div  style="position:fixed; max-width: 15%;">
                    <div class="card" style="left: 1.5rem; top: 1rem; width: 11rem; color:white; height: 12rem;" id="card3">
                        <div class="card-body" id="Element">

                        </div>
                    </div>
                    <div id="Element2">

                    </div>
                </div>
            </div>
            <div class="col-10">
                <table class="table table-striped table-bordered table-hover">
                    <tr>
                        {% for p in periods %}
                            <th scope="col" class="text-center" colspan="{% if p == "VIII" %}3{% else %}1{% endif %}">
                                {{ p }}
                            </th>
                        {% endfor %}
                    </tr>
                    {% for t in table %}
                        <tr>
                            {% for el in t %}
                                <td id="el{{ el.number }}" style="color: white; background-color: {{ el.color }}">
                                    <h3><span>{{ el.number }}</span></h3>
                                    <h2>{{ el.name }}</h2>
                                    <h6>{{ el.name_long }}</h6>
                                    <span>{{ el.m }}</span>
                                </td>
                            {% endfor %}
                        </tr>
                    {% endfor %}
                </table>
            </div>
        </div>
    </div>
{% endblock %}
{% block scripts %}
    <script>
        const table = JSON.parse('{{ json }}');
        const gen = (s) => {
            return `
 <div class="row">
    <div class="col-9">
        <h3><span>${s.number}</span></h3>
        <h2>${s.name}</h2>
        <h6>${s.name_long}</h6>
        <span>${s.m}</span>
    </div>
    <div class="col-3">
      ${s.electoron.join(' ')}
    </div>
  </div>
            `;
        }
        const gen2 = (s) => {
            return `
<br>
<div class="accordion accordion-flush" id="accordionFlushExample">
  <div class="accordion-item">
    <h2 class="accordion-header" id="flush-headingOne">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseOne" aria-expanded="false" aria-controls="flush-collapseOne">
        Химические свойства
      </button>
    </h2>
    <div id="flush-collapseOne" class="accordion-collapse collapse" aria-labelledby="flush-headingOne" data-bs-parent="#accordionFlushExample">
      <div style="font-size: 16px;">
                <div>Тип элемента - ${s.type}</div>
                <div>Энергетические уровни - ${s.energy}</div>
                <div>Вес элемента - ${s.m}</div>
                <div>Заряд ядра - ${s.number}</div>
                <div>${s.comment}</div>
            </div>
    </div>
  </div>
<div class="accordion-item">
    <h2 class="accordion-header" id="flush-headingTwo">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseTwo" aria-expanded="false" aria-controls="flush-collapseTwo">
        История элемента
      </button>
    </h2>
    <div id="flush-collapseTwo" class="accordion-collapse collapse" aria-labelledby="flush-headingTwo" data-bs-parent="#accordionFlushExample">
      <div style="font-size: 16px;">
                <div>Открыт в ${s.created} году</div>
                <div>${s.history}</div>
            </div>
    </div>
  </div>
<div class="accordion-item">
    <h2 class="accordion-header" id="flush-headingThree">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseThree" aria-expanded="false" aria-controls="flush-collapseThree">
        Интересные факты об элементе
      </button>
    </h2>
    <div id="flush-collapseThree" class="accordion-collapse collapse" aria-labelledby="flush-headingThree" data-bs-parent="#accordionFlushExample">
      <div style="font-size: 16px;">
                <div>${s.facts}</div>
            </div>
    </div>
  </div>
<div class="accordion-item">
    <h2 class="accordion-header" id="flush-headingFour">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseFour" aria-expanded="false" aria-controls="flush-collapseFour">
        Использование в повседневной жизни и технология производства
      </button>
    </h2>
    <div id="flush-collapseFour" class="accordion-collapse collapse" aria-labelledby="flush-headingFour" data-bs-parent="#accordionFlushExample">
      <div style="font-size: 16px;">
                <div>${s.used}</div>
            </div>
    </div>
  </div>
<div class="accordion-item">
    <h2 class="accordion-header" id="flush-headingFive">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseFive" aria-expanded="false" aria-controls="flush-collapseFive">
        Википедия
      </button>
    </h2>
    <div id="flush-collapseFive" class="accordion-collapse collapse" aria-labelledby="flush-headingFive" data-bs-parent="#accordionFlushExample">
      <div style="font-size: 16px;">
                <div><a href="${s.link}">Статья на Википедии</a></div>
     </div>
    </div>
  </div>
       `;
        }
        const edit = (i) => {
            j = table[i];
            $('#card3').css("background-color", j['color']);
            $('#Element').html(gen(j));
            $('#Element2').html(gen2(j));
        }
        for (let i = 1; i <= 200; ++i) {
            let j = table[i];
            if (j == undefined) continue;
            console.log(j);
            $(`#el${j.number}`).click(() => {
                edit(j.number);
            });
        }
        $('body').ready(() => {
            edit(1);
        });
    </script>
{% endblock %}